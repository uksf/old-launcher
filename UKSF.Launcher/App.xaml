<Application x:Class="UKSF.Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:UKSF.Launcher">
    <Application.Resources>
        <viewModels:ViewModelLocator x:Key="ViewModelLocator" />
        <ResourceDictionary x:Key="ResourceDictionary">
            <Color x:Key="Uksf.Colour.White" R="255" G="255" B="255" A="255" />
            <Color x:Key="Uksf.Colour.LightGrey" R="200" G="200" B="200" A="255" />
            <Color x:Key="Uksf.Colour.Grey" R="175" G="175" B="175" A="255" />
            <Color x:Key="Uksf.Colour.DarkGrey" R="100" G="100" B="100" A="255" />
            <Color x:Key="Uksf.Colour.Black" R="0" G="0" B="0" A="255" />
            <Color x:Key="Uksf.Colour.WindowsMouseOverBorder" R="126" G="180" B="234" A="255" />
            <Color x:Key="Uksf.Colour.Transparent" R="0" G="0" B="0" A="0" />
            <Color x:Key="Uksf.Colour.Background" R="45" G="45" B="45" A="255" />
            <Color x:Key="Uksf.Colour.BackgroundLight" R="65" G="65" B="65" A="255" />
            <Color x:Key="Uksf.Colour.BackgroundDark" R="40" G="40" B="40" A="255" />
            <Color x:Key="Uksf.Colour.BackgroundDarker" R="35" G="35" B="35" A="255" />
            <Color x:Key="Uksf.Colour.Foreground" R="222" G="154" B="37" A="255" />
            <Color x:Key="Uksf.Colour.ForegroundDark" R="222" G="106" B="20" A="255" />

            <SolidColorBrush x:Key="Uksf.White" Color="{DynamicResource Uksf.Colour.White}" />
            <SolidColorBrush x:Key="Uksf.LightGrey" Color="{DynamicResource Uksf.Colour.LightGrey}" />
            <SolidColorBrush x:Key="Uksf.Grey" Color="{DynamicResource Uksf.Colour.Grey}" />
            <SolidColorBrush x:Key="Uksf.DarkGrey" Color="{DynamicResource Uksf.Colour.DarkGrey}" />
            <SolidColorBrush x:Key="Uksf.Black" Color="{DynamicResource Uksf.Colour.Black}" />
            <SolidColorBrush x:Key="Uksf.WindowsMouseOverBorder"
                             Color="{DynamicResource Uksf.Colour.WindowsMouseOverBorder}" />
            <SolidColorBrush x:Key="Uksf.Transparent" Color="{DynamicResource Uksf.Colour.Transparent}" />
            <SolidColorBrush x:Key="Uksf.Background" Color="{DynamicResource Uksf.Colour.Background}" />
            <SolidColorBrush x:Key="Uksf.BackgroundLight" Color="{DynamicResource Uksf.Colour.BackgroundLight}" />
            <SolidColorBrush x:Key="Uksf.BackgroundDark" Color="{DynamicResource Uksf.Colour.BackgroundDark}" />
            <SolidColorBrush x:Key="Uksf.BackgroundDarker" Color="{DynamicResource Uksf.Colour.BackgroundDarker}" />
            <SolidColorBrush x:Key="Uksf.Foreground" Color="{DynamicResource Uksf.Colour.Foreground}" />
            <SolidColorBrush x:Key="Uksf.ForegroundDark" Color="{DynamicResource Uksf.Colour.ForegroundDark}" />

            <Style x:Key="Uksf.Focus">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Stroke="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.ContainerBorder" TargetType="{x:Type Border}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{DynamicResource Uksf.BackgroundDarker}" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="1,1,1,1" />
            </Style>

            <Style x:Key="Uksf.SettingsLabel" TargetType="{x:Type Label}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Grey}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Padding" Value="2,2,2,2" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>

            <Style x:Key="Uksf.TextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Grey}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Padding" Value="10,10,10,10" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style x:Key="Uksf.SettingsTextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Grey}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Padding" Value="2,2,2,2" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="MinHeight" Value="18" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style x:Key="Uksf.Button" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Foreground}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="30" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="Border" BorderThickness="0" Background="{DynamicResource Uksf.BackgroundDark}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.ForegroundDark}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundDark}" />
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.DarkGrey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.TabButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.DarkGrey}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="Border" BorderThickness="1" Background="{DynamicResource Uksf.BackgroundDark}"
                                BorderBrush="{DynamicResource Uksf.BackgroundDark}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundLight}" />
                                    <Setter Property="BorderBrush" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundLight}" />
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.Grey}" />
                                    <Setter Property="FontSize" Value="25" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="Border"
                                            Value="{DynamicResource Uksf.Background}" />
                                    <Setter Property="BorderBrush" TargetName="Border"
                                            Value="{DynamicResource Uksf.Background}" />
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.Foreground}" />
                                    <Setter Property="FontSize" Value="26" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.SlimButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Foreground}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="75" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="Border" BorderThickness="1"
                                Background="{DynamicResource Uksf.BackgroundDarker}"
                                BorderBrush="{DynamicResource Uksf.BackgroundDarker}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.ForegroundDark}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.DarkGrey}" />
                                    <Setter Property="Background" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundDark}" />
                                    <Setter Property="BorderBrush" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundDark}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.PaddedButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Foreground}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="75" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="Border" BorderThickness="1"
                                Background="{DynamicResource Uksf.BackgroundDarker}"
                                BorderBrush="{DynamicResource Uksf.BackgroundDarker}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.ForegroundDark}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.DarkGrey}" />
                                    <Setter Property="Background" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundDark}" />
                                    <Setter Property="BorderBrush" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundDark}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.RefreshButton" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.DarkGrey}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="Border" BorderThickness="0" Background="{DynamicResource Uksf.Transparent}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.Grey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.Textbox" TargetType="{x:Type TextBox}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Black}" />
                <Setter Property="Background" Value="{DynamicResource Uksf.White}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Uksf.BackgroundLight}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="12" />
            </Style>

            <Style x:Key="Uksf.PasswordBox" TargetType="{x:Type PasswordBox}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Black}" />
                <Setter Property="Background" Value="{DynamicResource Uksf.White}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Uksf.BackgroundLight}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="12" />
            </Style>

            <Style x:Key="Uksf.CheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource Uksf.Focus}" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Grey}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border" Width="16" Height="16" CornerRadius="0"
                                            Background="{DynamicResource Uksf.BackgroundDarker}" BorderThickness="1"
                                            BorderBrush="{DynamicResource Uksf.BackgroundDarker}">
                                        <Path Width="16" Height="16" x:Name="CheckMark" SnapsToDevicePixels="False"
                                              Stroke="{DynamicResource Uksf.Foreground}" StrokeThickness="2"
                                              Data="F1 M 1.068732,9L 5.03345,12L 13,1.120569" />
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center"
                                                  HorizontalAlignment="Left" RecognizesAccessKey="True" />
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.White}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource Uksf.DarkGrey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="Uksf.ComboBoxToggleButton" TargetType="ToggleButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border" BorderBrush="{DynamicResource Uksf.BackgroundLight}"
                            BorderThickness="1" Background="{DynamicResource Uksf.White}" />
                    <Border Grid.Column="1" Name="ButtonBorder" Margin="1,1,1,1"
                            BorderBrush="{DynamicResource Uksf.BackgroundLight}" BorderThickness="0"
                            Background="{DynamicResource Uksf.White}" />
                    <Path Name="Arrow" Grid.Column="1" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                          HorizontalAlignment="Center" Fill="{DynamicResource Uksf.BackgroundLight}"
                          VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" TargetName="Border"
                                Value="{DynamicResource Uksf.WindowsMouseOverBorder}" />
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder"
                                Value="{DynamicResource Uksf.LightGrey}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="Uksf.ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="Height" Value="23" />
                <Setter Property="Padding" Value="3,0,0,0" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border
                                x:Name="Border" BorderThickness="0" Background="{DynamicResource Uksf.White}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border"
                                            Value="{DynamicResource Uksf.LightGrey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.ComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource Uksf.Black}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" ClickMode="Press" Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Template="{DynamicResource Uksf.ComboBoxToggleButton}" />
                                <ContentPresenter Name="ContentSite" Margin="4,3,25,2" IsHitTestVisible="False"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center"
                                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                                <TextBox Name="PART_EditableTextBox" Margin="0,2,25,2"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden"
                                         Background="{DynamicResource Uksf.Transparent}" HorizontalAlignment="Left"
                                         VerticalAlignment="Center" Focusable="True">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox">
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True"
                                       IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                          MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="{DynamicResource Uksf.White}"
                                                Margin="0,0,0,0" BorderThickness="1"
                                                BorderBrush="{DynamicResource Uksf.BackgroundLight}" />
                                        <ScrollViewer Margin="1" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder"
                                            Value="25" />
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="Uksf.ComboBoxToggleButtonPlay" TargetType="ToggleButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border" IsHitTestVisible="False"
                            Background="{DynamicResource Uksf.Transparent}" />
                    <Border Grid.Column="1" Name="ButtonBorder" Margin="1,1,1,1"
                            Background="{DynamicResource Uksf.Transparent}" />
                    <Path Name="Arrow" Grid.Column="1" Data="M0,0 L0,7 L15,22 L30,7 L30,0 L15,15 z"
                          HorizontalAlignment="Center" Fill="{DynamicResource Uksf.Foreground}"
                          VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Fill" TargetName="Arrow"
                                Value="{DynamicResource Uksf.ForegroundDark}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource Uksf.DarkGrey}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="Uksf.ComboBoxItemPlay" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Foreground" Value="{DynamicResource Uksf.Foreground}" />
                <Setter Property="Height" Value="53" />
                <Setter Property="Width" Value="375" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border
                                x:Name="Border" BorderThickness="0" Background="{DynamicResource Uksf.BackgroundDark}">
                                <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Border"
                                            Value="{DynamicResource Uksf.BackgroundLight}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Uksf.ComboBoxPlay" TargetType="{x:Type ComboBox}">
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource Uksf.Transparent}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="Grid">
                                <ToggleButton x:Name="ToggleButton" ClickMode="Press" Focusable="False"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Template="{DynamicResource Uksf.ComboBoxToggleButtonPlay}" />
                                <ContentPresenter x:Name="ContentSite" Margin="4,3,25,2" IsHitTestVisible="False"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                                <TextBox x:Name="PART_EditableTextBox" Margin="0,2,25,2"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden"
                                         Background="{DynamicResource Uksf.Transparent}" HorizontalAlignment="Left"
                                         VerticalAlignment="Center" Focusable="True">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border x:Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <Popup x:Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True"
                                       IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="Slide">
                                    <Grid x:Name="DropDown" SnapsToDevicePixels="True"
                                          MinWidth="375"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" BorderThickness="1"
                                                Background="{DynamicResource Uksf.BackgroundDark}"
                                                BorderBrush="{DynamicResource Uksf.BackgroundDark}" />
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="MinHeight" TargetName="DropDownBorder"
                                            Value="75" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>